{"version":3,"sources":["index.js","statistic.js","01_main.js"],"names":["communitySlider","Swiper","slidesPerView","spaceBetween","pagination","el","type","clickable","breakpoints","320","576","headSlider","effect","autoplay","delay","speed","fadeEffect","crossFade","artSlider","brandSlider","step1Btn","document","querySelector","step2BackBtn","step2","onclick","classList","add","remove","burger","body","header","toggle","provider","ethers","providers","Web3Provider","window","ethereum","claim_abi","inputs","internalType","name","outputs","stateMutability","address","connect_btn","account_btn","async","connectMetamask","open","send","checkAccount","signer","getSigner","getAddress","innerHTML","substr","getTXTRecord","getDomains","err","console","log","claim","protocol_airdrop","Contract","connect","data","fetch","URLSearchParams","account","domain","args","json","Domain","Account","BigInt","Value","utils","arrayify","Signatures","quiz_table","forEach","i","txt_record_field","value","addDomain","verify_button"],"mappings":"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","file":"../components/main.min.js","sourcesContent":["function communitySlider() {\r\n    var swiper = new Swiper('.community__slider .swiper-container', {\r\n        slidesPerView: 1,\r\n        spaceBetween: 10,\r\n        pagination: {\r\n            el: '.community__slider .swiper-pagination',\r\n            type: 'bullets',\r\n            clickable: true,\r\n        },\r\n        breakpoints: {\r\n            320: {\r\n                slidesPerView: 1,\r\n            },\r\n            576: {\r\n                slidesPerView: 3,\r\n                spaceBetween: 30\r\n            },\r\n        }\r\n    })\r\n}\r\n\r\nfunction headSlider() {\r\n    var swiper = new Swiper('.main__img.swiper-container', {\r\n        slidesPerView: 1,\r\n        effect: 'fade',\r\n        autoplay: {\r\n            delay: 4000\r\n        },\r\n        speed: 3000,\r\n        fadeEffect: {\r\n            crossFade: false\r\n        },\r\n    })\r\n}\r\n\r\nfunction artSlider() {\r\n    var swiper = new Swiper('.main__art-items.swiper-container', {\r\n        slidesPerView: 'auto',\r\n        autoplay: {\r\n            delay: 4000\r\n        },\r\n        speed: 3000,\r\n    })\r\n}\r\n\r\nfunction brandSlider() {\r\n    var swiper = new Swiper('.community__brands.swiper-container', {\r\n        slidesPerView: 'auto',\r\n        autoplay: {\r\n            delay: 4000\r\n        },\r\n        speed: 3000,\r\n    })\r\n}\r\n\r\ncommunitySlider()\r\nheadSlider()\r\nartSlider()\r\nbrandSlider()\r\n","let step1Btn = document.querySelector(\"[data-step='addDomain']\")\r\nlet step2BackBtn = document.querySelector(\"[data-step='backStep1']\")\r\nlet step2 = document.querySelector(\".quiz__step2\")\r\n\r\n\r\nif (step1Btn) {\r\n    step1Btn.onclick = function() {\r\n        step2.classList.add(\"quiz__step2--active\")\r\n    }\r\n}\r\n\r\nif (step2BackBtn) {\r\n    step2BackBtn.onclick = function() {\r\n        step2.classList.remove(\"quiz__step2--active\")\r\n    }\r\n}","let burger = document.querySelector(\".header__burger\")\r\nlet body = document.querySelector(\"body\")\r\nlet header = document.querySelector(\"header\")\r\n\r\nburger.onclick = function() {\r\n    header.classList.toggle(\"header--active\")\r\n    body.classList.toggle(\"fixed-body\")\r\n}\r\n\r\n\r\nconst provider = new ethers.providers.Web3Provider(window.ethereum)\r\nconst claim_abi = [\r\n\r\n    {\r\n        \"inputs\": [{\r\n                \"internalType\": \"string\",\r\n                \"name\": \"domain\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"value\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bytes[]\",\r\n                \"name\": \"signatures\",\r\n                \"type\": \"bytes[]\"\r\n            }\r\n        ],\r\n        \"name\": \"claim\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\nlet connect_btn = document.querySelector(\".connect_btn\")\r\nlet account_btn = document.querySelector(\".account_btn\")\r\n\r\nasync function connectMetamask() {\r\n    if (address) {\r\n        window.open(\"/domains\", \"_self\")\r\n    }\r\n    await provider.send(\"eth_requestAccounts\", []);\r\n    checkAccount()\r\n}\r\n\r\n\r\n\r\nconnect_btn.onclick = connectMetamask\r\nlet address\r\nasync function checkAccount() {\r\n    let signer = provider.getSigner()\r\n    address = await signer.getAddress()\r\n    if (address) {\r\n        connect_btn.innerHTML = address.substr(0, 6) + \"...\" + address.substr(36, 4)\r\n        try {\r\n            getTXTRecord()\r\n            getDomains()\r\n        } catch (err) {\r\n            console.log()\r\n        }\r\n    }\r\n\r\n}\r\n\r\ncheckAccount()\r\n\r\n\r\nasync function claim() {\r\n    let protocol_airdrop = new ethers.Contract(\"0x3d38fa9B1E78EaA35175B8647b25F41B445dDaCB\", claim_abi, provider)\r\n    let signer = provider.getSigner()\r\n    protocol_airdrop = protocol_airdrop.connect(signer)\r\n\r\n    let data = await fetch(\"/api/airdrop?\" + new URLSearchParams({ account: await signer.getAddress(), domain: \"gems.black\" }))\r\n    let args = await data.json()\r\n    console.log(args)\r\n    protocol_airdrop.claim(args.Domain, args.Account, BigInt(args.Value), [ethers.utils.arrayify(\"0x\" + args.Signatures)])\r\n\r\n}\r\n\r\n\r\n\r\nasync function getDomains() {\r\n\r\n    let quiz_table = document.querySelector(\".quiz__table\")\r\n    quiz_table.innerHTML = \"\"\r\n    let data = await fetch(\"/api/domains?\" + new URLSearchParams({ account: address }))\r\n    let list = await data.json()\r\n    list.forEach((i) => {\r\n        quiz_table.innerHTML += `\r\n        <div class=\"quiz__row\">\r\n            <div class=\"quiz__info\">\r\n            <div class=\"quiz__info-item\">` + i.Domain + `</div>\r\n            <div class=\"quiz__info-item\">Tier 1</div>\r\n            <div class=\"quiz__info-item\">Exp 22.08.24</div>\r\n            <div class=\"quiz__info-item\">Score: 462</div>\r\n            </div>\r\n        </div>`\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nasync function getTXTRecord() {\r\n    let txt_record_field = document.querySelector(\".txt_record_field\")\r\n    let data = await fetch(\"/api/txt-record?\" + new URLSearchParams({ account: address }))\r\n    txt_record_field.value = (await data.json())[\"txt_record\"]\r\n}\r\n\r\n\r\n\r\nasync function addDomain() {\r\n    try {\r\n         let signer = provider.getSigner()\r\n        let domain = document.querySelector(\".domain_field\")\r\n        let data = await fetch(\"/api/add-domain?\" + new URLSearchParams({ account: await signer.getAddress(), domain: domain.value }))\r\n    } catch (err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nlet verify_button = document.querySelector(\".verify_btn\")\r\nif (verify_button){\r\n    verify_button.onclick=addDomain\r\n}\r\n"]}